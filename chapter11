******************************
Вск Апр 20 18:53:56 OMST 2014
******************************
в данной главе мы познакомимся с многооконностью в vim

	vim -o file1 file2 file3 - откроет редактор с тремя файлами для редактирования (каждый файл будет находиться в отдельном окне)

	vim -on file1 file2 - параметр n указывает на количество открываемых окон (оно может быть не равно числу указанных в командной строке файлов)

Многооконное редактирование VIM

	:split - разделит окно пополам и отобразит там один и тот же буфер
	:vsplit - сделает тоже самое действие, но экран будет разделен вертикальной линией
	:split path_to_other_file

Опции команды split
	:[n]split ++opt +cmd file
		n - количество строк, которое нужно отображать в новом окне, которое будет располагаться над всеми остальными
		++opt - передает опции для редактора vim
		+cmd - команда, которую нужно выполнить в новом окне
		file - имя файла

Мы можем использовать опции для разделения экрана
	:equalalways - разделит экран на две равные части (.vimrc)
	:eadirection(hor, ver, both)

Помимо всего прочего можно использовать	
	:[n]new ++opt +cmd file - так же создаст новое горизонтальное окно (но помимо этого будут выполнены автокоманды WinLeave, WinEnter, BufLeave(Enter)
	:vnew - разделит по вертикали
	:sview filename - разделит окно горизонтально пополам. ( указанный файл будет открыт только для чтения )
	:sfind ++opt +cmd file - откроет filename, найдя его в path

Перемещение между окнами vim
	переходить между экранами удобно с помощью мыши ( но наверное не очень, если ты законнектился через putty на сервер без gui)
	gvim - умеет все это по-умолчанию
	vim - set mouse=a добавит эту поддержку и в консольный вариант vim


Так же есть куча трюков для переключения между файлами с помощью привычной клавиатуры :)

^W j - переход на одно окно ниже текущего (^W k - на одно окно выше)
	!эти команды не позволяют перемещаться между окнами циклически. ^W ^W - напротив позволит это сделать
