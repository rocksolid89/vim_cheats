#изучаем строковый редактор ex

#Шаблоны поиска

Шаблоны поиска задаются примерно в таком виде:

--/pattern/operation
/pattern/d - удалит строку, соответствующую первому вхождению паттерна в текст
/pattern/+d - удалит строку, следующую за строкой, содержащей паттерн
/pattern1/,/pattern2/# - отобразит все строки со строки, содержащей паттерн1 до строки, содержащей паттерн2

	стоит отметить, что команды удаления по нахождению шаблона в тексте работаю по-разному в ex и vi: например .,/pattern/d - удалит текущую строку и строку, содержащую паттерн.

#Глобальный поиск
команда глобального поиска в ex задается в виде g/pattern
	результатом этой команды буду все строки, содержащие шаблон
! есть также противоположная по значению команда: g!/pattern - выведет только те строки, которые не содержат шаблона поиска


#Переопределение текущего положения курсора
в ех есть такая особенность, что при использовании относительной адресации мы работаем с текущей строкой. тобишь: 100,+4 р выдаст ошибку, т.к. это эквивалентно записи 100,5р
чтобы вывести 5 строк после строки номер 100 используйти команду 100;+4 р (используйте точку с запятой)

#продолжаем повышать наши навыки использования редактора vim


# работа с буфером ( переименование, запись в конец уже существующего файла )

:w filename2 - запишет текущий буфер в файл с именем filename2

1,$w filename2 - сохранит диапазон стокр из текущего файла в файл с именем filename2

.;23w >> filename2 - допишет строки с текущей по 23  в файл с именем filename2

#чтение из другого файла
чтобы иметь возможность вставлять текст из уже имеющихся файлов в системе можноиспользовать команду read (r) программы ех

$ r temp - вставит содержимое файла temp в текущий файл (в данном случае в самый конец)

#редактирование нескольких файлов с помощью vim

vim file1 file2 - откроет два файла, переключаться между которыми можно с помощью команды :n ( команда ех )

в ех присутствует команда :args (:ar) отображающая весь список файлов; текущий файл будет выделен квадратными скобками )

:rewind (:rew) - делает текущим первый вариант в списке файлов ! ( в vim есть команда :last, которая делает в точности противоположное действие ^_^)

* открытие других файлов в vi
	c этой целью используется команда :e ( из ех )
* vi помнит 2 имени файла 
	# - имя текущего файла
	% - имя альтернативного файла (например можно использовать для сохранения текущего открытого файла под другим именем)
* :e! - позволяет вернуться к последней сохраненной версии текущего файла

# переключение между файлами в vim 


CTRL ^^ - переход от предыдущего к следующему и наоборот

копирование из одного файла в другой
 для этих целей мы можем использовать именнованные буферы обмена
	- открываем каких нибудь 2 файла с помощью vim
	- пишем текст и копируем его в буфер ( например буфер g - "gy4w )
	- переходим в другой файл (:n)
	- вставляем скопированный текст в этот файл ( "gp ) 
	- PROFIT!!!


