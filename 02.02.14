за рамками основ редактора vim

опции отрытия файлов vi

vi +n file - открыть файл на определенной строке
vi + file - открыть файл на полседней строке
vi +/pattern_to_mach file - открыть файл на первом найденном паттерне поиска

	vi допускает использование приведенных выше команд в POSIX формате: vim -c command file
открытие файла только для чтения 
vim -R filename
view filename 
	в случае, если вы хотите сохранить файл, открытый только для чтения можно использовать команды w! and wq!
vim -r filename - восстановит сохраненный во время сбоя буфер указанного файла (you should read local man pages)

Использование буферов vi

касательно сабжа: у нас есть 9 нумерованных буферов, которые хранят строки удаленные командой d
		  так же мы можем создать 26 (a-z) буферов и вставлять в них текст, как только посчитаем это нужным. последнее удаление находится в буфере 1, предпоследнее в буфере 2 и т.д.

вставка из буферов осуществляется с помощью команды "Np, где N - номер буфера (последний удаленный текст расположен в буфере 1, предпоследний в буфере 2 и т.д.)

#lifehack
чтобы вставить содержимое нужного буфера используйте команду типа:"npu.u.u. и так до тех пор, пока не переберете все буферы (с 1 по 9). начиная с определенного номера буфера vi инкрементирует номер автоматически

Использование именованных буферов

шаблон следующий

*bufname*number*operation
"a5dd - удалить 5 строк в буфер "а"
"b6dw - удалить 6 слов в буфер "b"

вставка из буфера: "dp - вставить из буфера d в строку, находящуюся после текущего положения курсора

	буферы можно использовать для передачи текста между разными файлами, открываемыми в vi;
lifehack: если имя буфера указать с большой буквы, то в этот буфер можно дописывать текст к уже существующему там


#отметка текста

vi допускает использование меток для текста, которые можно задать с помощью команды "mx", где буква х может быть как в строчном, так и в прописном формате
'x - установит курсор на первый символ строки, содержащей метку х
`x - установит курсор на символ, помеченный как х
'' - возвращает курсор на первый символ строки, содержащей предыдущую метку
`` - возвращает на предыдущую метку

